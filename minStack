#include <bits/stdc++.h> 
class minStack
{
	stack<int> st;
    int minValue;
    void getMin(stack<int> &st,int& minimum){
        if(st.empty()){
            return;
        }
        int ele = st.top();
        st.pop();
        if(ele < minimum){
            minimum = ele;
        }
        getMin(st,minimum);
        st.push(ele);
        return;
    }
	public:
		minStack() 
		{ 
            minValue = 100000;
		}
		
		void push(int num)
		{
            if(st.empty()){
                minValue = num;
                st.push(num);
                return;
            }
            if(num<minValue){
                minValue = num;
            }
            st.push(num);
            return;
		}
		
		int pop()
		{
            if(st.empty()){
                return -1;
            }
            int element = st.top();
            st.pop();
            if(element == minValue){
                int mini = 100001;
                getMin(st,mini);
                minValue = mini;
                return element;
            }else{
                return element;
            }
            
		}
		
		int top()
		{
            
            if(st.empty()){
                return -1;
            }
            return st.top();
		}
		
		int getMin()
		{
            if(st.empty()){
                return -1;
            }
            return minValue;
		}
};
